# captain-local generate  compose --docker.tag latest --docker.registry localhost
services:
  base:
    environment:
      HTTP_PROXY: http://web.prod.proxy.cargill.com:4200
      HTTPS_PROXY: http://web.prod.proxy.cargill.com:4200
  localdevpythonapp:
    extends: base
    cap_drop:
      - NET_RAW
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_SECRET_ACCESS_KEY: test
      BUCKET_MYSTORAGE_NAME: mystorage
      CAPTAIN_APP_ENV: local
      DB_CONNECTION: jdbc:postgresql://postgres:5432/localdevpythonapppostgres
      DB_HOST: postgres
      DB_NAME: localdevpythonapppostgres
      DB_PASSWORD: password
      DB_PORT: "5432"
      DB_USERNAME: localdevpythonappadmin
      DBRO_CONNECTION: jdbc:postgresql://postgres:5432/localdevpythonapppostgres
      DBRO_PASSWORD: password
      DBRO_PORT: "5432"
      DBRO_USERNAME: localdevpythonappadmin
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - HTTPS_PROXY=${HTTPS_PROXY}
        - HTTP_PROXY=${HTTP_PROXY}
    volumes:
      - ./:/app
    command: poetry run uvicorn main:app --reload --host 0.0.0.0 --port ${BACKEND_PORT:-7001}
    ports:
      - mode: ingress
        target: 7001
        published: "7001"
        protocol: tcp
    security_opt:
      - no-new-privileges:true
    depends_on:
      - postgres
      - localstack
      - skipper
  localstack:
    environment:
      SKIP_SSL_CERT_DOWNLOAD: "1"
    image: localstack/localstack:latest
    ports:
      - mode: ingress
        target: 4566
        published: "4566"
        protocol: tcp
    volumes:
      - type: bind
        source: ./init-aws.sh
        target: /etc/localstack/init/ready.d/init-aws.sh
  postgres:
    environment:
      POSTGRES_DB: localdevpythonapppostgres
      POSTGRES_PASSWORD: password
      POSTGRES_USER: localdevpythonappadmin
    image: postgres:latest
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
  skipper:
    command:
      - skipper
      - -routes-file=/config.eskip
    image: ghcr.io/zalando/skipper:latest
    ports:
      - mode: ingress
        target: 9090
        published: "9090"
        protocol: tcp
    volumes:
      - type: bind
        source: ./config.eskip
        target: /config.eskip
